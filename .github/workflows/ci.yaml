name: CI

on: [push, pull_request]

env:
  RUSTC_VERSION: 1.81.0
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  cargo-toml-fmt-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUSTC_VERSION }}
      - name: Setup binstall
        uses: taiki-e/install-action@cargo-binstall
      - name: Install Cargo.toml linter
        run: cargo binstall --no-confirm cargo-sort
      - name: Run Cargo.toml sort check
        run: cargo sort --check

  cargo-fmt-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUSTC_VERSION }}
          components: rustfmt
      - name: Run cargo fmt check
        run: cargo fmt --all -- --check

  cargo-clippy-no-default-features:
    runs-on: ubuntu-latest
    needs:
      - cargo-toml-fmt-check
      - cargo-fmt-check
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUSTC_VERSION }}
          components: clippy
      - name: Run cargo clippy without default features
        run: cargo clippy --locked --no-default-features -- -D warnings

  cargo-clippy-all-features-all-targets:
    runs-on: ubuntu-latest
    needs:
      - cargo-toml-fmt-check
      - cargo-fmt-check
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUSTC_VERSION }}
          components: clippy
      - name: Run cargo clippy with all features and targets
        run: cargo clippy --locked --all-targets --all-features -- -D warnings

  build-and-test:
    runs-on: ubuntu-latest
    needs:
      - cargo-clippy-all-features-all-targets
      - cargo-clippy-no-default-features
    strategy:
      matrix:
        platform:
          #          - aarch64-apple-darwin
          #          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.platform }}

      - name: Install deps
        run: |
          sudo apt-get update && \
            sudo apt-get install -y \
              gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu \
              qemu-user libssl-dev pkg-config
      - name: Build
        run: cargo build --target ${{ matrix.platform }} --release

      - name: Test
        run: cargo test --target ${{ matrix.platform }}
